// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
  
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}



model AnomaloJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  department  String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model NumericJob {
  id          String   @id @default(uuid())
  title       String  
  company     String
  location_type    String
  address     String
  department  String
  time        String
  href        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tags       NumericJobTag[]

  @@unique([title, href])
}

model NumericJobTag {
  id          String   @id @default(uuid())
  jobId      String
  job        NumericJob @relation(fields: [jobId], references: [id], onDelete: Cascade)
  tag       String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CredoJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  location    String
  department  String
  workplaceType String?
  employmentType String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LaurelJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  department  String
  location    String
  employmentType String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PivotalJob {
  id          String   @id @default(uuid())
  title       String  
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ChecklyJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  department  String
  location    String
  workplaceType String?
  employmentType String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  checklyLocation ChecklyLocation[]
}

model ChecklyLocation {
  id          String   @id @default(uuid())
  locationId  String   
  locationName String
  checklyJob  ChecklyJob @relation(fields: [checklyJobId], references: [id], onDelete: Cascade)
  checklyJobId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VoizeJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  department  String
  location    String
  workplaceType String?
  employmentType String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  voizeLocation VoizeLocation[]
}

model VoizeLocation {
  id          String   @id @default(uuid())
  locationId  String
  locationName String
  voizeJob    VoizeJob @relation(fields: [voizeJobId], references: [id], onDelete: Cascade)
  voizeJobId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FarSightJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  locations   FarSightLocation[]
}

model FarSightLocation {
  id          String   @id @default(uuid())
  locationId  String
  locationType String
  locationName String
  farSightJob  FarSightJob @relation(fields: [farSightJobId], references: [id], onDelete: Cascade)
  farSightJobId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TeleportJob {
  id          String   @id @default(uuid())
  title       String
  teamName    String
  location    String
  type        String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SafeJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  group String
  department  String
  workplaceType String
  employmentType String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MaraTalentJob {
  id          String   @id @default(uuid())
  title       String
  company    String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MaterializeJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LegionJob {
  id          String   @id @default(uuid())
  title       String  @unique
  location    String
  type        String
  compensation String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LoopJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String
  department  String
  location    String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model EnterpretJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SeeChangeJob {
  id          String   @id @default(uuid())
  jobId       String @unique
  title       String
  department  String
  employmentType String
  city        String
  state      String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Lepton {
  id          String   @id @default(uuid())
  title       String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RecruitmentJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String
  location    String
  salary      String
  href        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OperantaiJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WebaiJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  department  String
  location    String
  employmentType String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CardinalopsJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  meta        String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DoxelJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  department  String
  workplaceType String
  employmentType String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RoboFlowJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  department  String?
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DashJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  employmentType String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LumosJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String
  location    String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FormantJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FluidStackJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  department  String
  location    String
  workplaceType String?
  employmentType String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  fluidStackLocation FluidStackLocation[]
}

model FluidStackLocation {
  id          String   @id @default(uuid())
  locationId  String
  locationName String
  fluidStackJob    FluidStackJob @relation(fields: [fluidStackJobId], references: [id], onDelete: Cascade)
  fluidStackJobId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AbnormalJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VorlonJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([title, department, location])
}

model OmneaJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  department  String
  location    String
  employmentType String
  compensation  String?
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SysdigJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  group       String
  department  String
  workplaceType String
  employmentType String?
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PortJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model EndorLabsJob {
  id          String   @id @default(uuid())
  title       String
  department  String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model IoJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String
  location    String
  department  String
  employmentType String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model HightouchJob {
  id          String   @id @default(uuid())
  title       String  
  location    String
  department  String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RelyanceJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String
  department  String
  location    String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AntithesisJob {
  id          String   @id @default(uuid())
  jobId      String @unique
  title       String  
  location    String
  href        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model GetbalanceJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BasetenJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BlockaidJob {
  id          String   @id @default(uuid())
  title       String
  location    String
  href        String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}